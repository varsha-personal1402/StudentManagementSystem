# Step 1: Use an official JDK image as a base
FROM eclipse-temurin:17-jdk-alpine as build

# Step 2: Set working directory
WORKDIR /app

# Step 3: Copy Maven wrapper and pom.xml first (for caching dependencies)
COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .

# Step 4: Download dependencies (this layer will be cached if pom.xml hasn't changed)
RUN ./mvnw dependency:go-offline

# Step 5: Copy source code
COPY src src

# Step 6: Build the application
RUN ./mvnw clean package -DskipTests

# Step 7: Use a smaller JRE image for final build
FROM eclipse-temurin:17-jre-alpine

# Step 8: Set working directory for final image
WORKDIR /app

# Step 9: Copy the jar file from build stage
COPY --from=build /app/target/*.jar app.jar

# Step 10: Expose port 8080
EXPOSE 8080

# Step 11: Run the Spring Boot application
ENTRYPOINT ["java", "-jar", "app.jar"]
